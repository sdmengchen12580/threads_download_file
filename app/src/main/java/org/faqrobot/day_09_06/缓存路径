①SD卡缓存目录
当应用需要将图片或者文件缓存到SD卡中时要去申请创建目录，有下面几种途径
我们可以通过API调用应用专属目录:（下面两个目录是专属于当前app的，当应用被删除时，上面目录下的文件也会清空）
1.Content.getExternalFilesDir(Environment.DIRECTORY_PICTURES);
// /storage/emulated/0/Android/data/app_package_name/files/Pictures
2.Content.getExternalCacheDir();
// /storage/emulated/0/Android/data/app_package_name/cache



②内存缓存目录
相对于应用的专属SD卡缓存有两个内存缓存地址：
Content. getCacheDir(); //  /data/data/app_package_name/cache
Content. getFilesDir(); //  /data/data/app_package_name/files
这两个目录中的文件也会随着app的删除而清空


注意：当系统版本大于等于4.4时，对通过上面4个API调用得到的目录进行文件的读写操作不需要申请SD卡的读写权限
所以6.0及以上系统使用时也不需要动态申请读写权限



③封装——API使用及方法封装：
/**
 * 获取应用专属缓存目录
 * android 4.4及以上系统不需要申请SD卡读写权限
 * 因此也不用考虑6.0系统动态申请SD卡读写权限问题，切随应用被卸载后自动清空 不会污染用户存储空间
 * @param type 文件夹类型 可以为空，为空则返回API得到的一级目录
 * @return 缓存文件夹 如果没有SD卡或SD卡有问题则返回内存缓存目录，否则优先返回SD卡缓存目录
 */
public static File getCacheDirectory(Context context,String type) {
    File appCacheDir = getExternalCacheDirectory(context,type);
    if (appCacheDir == null){
        appCacheDir = getInternalCacheDirectory(context,type);
    }
    if (appCacheDir == null){
        Log.e("getCacheDirectory","getCacheDirectory fail ,the reason is mobile phone unknown exception !");
    }else {
        if (!appCacheDir.exists()&&!appCacheDir.mkdirs()){
            Log.e("getCacheDirectory","getCacheDirectory fail ,the reason is make directory fail !");
        }
    }
    return appCacheDir;
}

/**
 * 获取SD卡缓存目录
 * @param type 文件夹类型 如果为空则返回 /storage/emulated/0/Android/data/app_package_name/cache
 *             否则返回对应类型的文件夹如Environment.DIRECTORY_PICTURES 对应的文件夹为 .../data/app_package_name/files/Pictures
 * {@link android.os.Environment#DIRECTORY_MUSIC},
 * {@link android.os.Environment#DIRECTORY_PODCASTS},
 * {@link android.os.Environment#DIRECTORY_RINGTONES},
 * {@link android.os.Environment#DIRECTORY_ALARMS},
 * {@link android.os.Environment#DIRECTORY_NOTIFICATIONS},
 * {@link android.os.Environment#DIRECTORY_PICTURES}, or
 * {@link android.os.Environment#DIRECTORY_MOVIES}.or 自定义文件夹名称
 * @return 缓存目录文件夹 或 null（无SD卡或SD卡挂载失败）
 */
public static File getExternalCacheDirectory(Context context,String type) {
    File appCacheDir = null;
    if( Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {
        if (TextUtils.isEmpty(type)){
            appCacheDir = context.getExternalCacheDir();
        }else {
            appCacheDir = context.getExternalFilesDir(type);
        }

        if (appCacheDir == null){// 有些手机需要通过自定义目录
            appCacheDir = new File(Environment.getExternalStorageDirectory(),"Android/data/"+context.getPackageName()+"/cache/"+type);
        }

        if (appCacheDir == null){
            Log.e("getExternalDirectory","getExternalDirectory fail ,the reason is sdCard unknown exception !");
        }else {
            if (!appCacheDir.exists()&&!appCacheDir.mkdirs()){
                Log.e("getExternalDirectory","getExternalDirectory fail ,the reason is make directory fail !");
            }
        }
    }else {
        Log.e("getExternalDirectory","getExternalDirectory fail ,the reason is sdCard nonexistence or sdCard mount fail !");
    }
    return appCacheDir;
}

/**
 * 获取内存缓存目录
 * @param type 子目录，可以为空，为空直接返回一级目录
 * @return 缓存目录文件夹 或 null（创建目录文件失败）
 * 注：该方法获取的目录是能供当前应用自己使用，外部应用没有读写权限，如 系统相机应用
 */
public static File getInternalCacheDirectory(Context context,String type) {
    File appCacheDir = null;
    if (TextUtils.isEmpty(type)){
        appCacheDir = context.getCacheDir();// /data/data/app_package_name/cache
    }else {
        appCacheDir = new File(context.getFilesDir(),type);// /data/data/app_package_name/files/type
    }

    if (!appCacheDir.exists()&&!appCacheDir.mkdirs()){
        Log.e("getInternalDirectory","getInternalDirectory fail ,the reason is make directory fail !");
    }
    return appCacheDir;
}